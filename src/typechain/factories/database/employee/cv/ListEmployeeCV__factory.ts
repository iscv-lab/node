/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ListEmployeeCV,
  ListEmployeeCVInterface,
} from "../../../../database/employee/cv/ListEmployeeCV";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct EmployeeCV",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Add",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct EmployeeCV",
        name: "item",
        type: "tuple",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        internalType: "struct EmployeeCV",
        name: "item",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        internalType: "struct EmployeeCV",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
        ],
        internalType: "struct EmployeeCV[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "retrive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000072620000666200007860201b60201c565b6200008060201b60201c565b62000218565b600033905090565b62000090620000ea60201b60201c565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16620001116200016c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016190620001f6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620001de60208362000195565b9150620001eb82620001a6565b602082019050919050565b600060208201905081810360008301526200021181620001cf565b9050919050565b61140a80620002286000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010f578063daea85c51461012d578063e0886f9014610149578063f2fde38b14610179578063f44409761461019557610093565b80632417450f1461009857806353ed5143146100b457806380c9419e146100d257806383197ef014610105575b600080fd5b6100b260048036038101906100ad9190610977565b6101b1565b005b6100bc610214565b6040516100c99190610b72565b60405180910390f35b6100ec60048036038101906100e79190610bc0565b610323565b6040516100fc9493929190610c46565b60405180910390f35b61010d6103eb565b005b61011761040c565b6040516101249190610ca1565b60405180910390f35b61014760048036038101906101429190610977565b610435565b005b610163600480360381019061015e9190610bc0565b610497565b6040516101709190610d1f565b60405180910390f35b610193600480360381019061018e9190610977565b61058b565b005b6101af60048036038101906101aa9190610f14565b61060e565b005b6101b96106c1565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561031a578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461028990610f8c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610f8c565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b50505050508152505081526020019060010190610238565b50505050905090565b6002818154811061033357600080fd5b906000526020600020906004020160009150905080600001549080600101549080600201549080600301805461036890610f8c565b80601f016020809104026020016040519081016040528092919081815260200182805461039490610f8c565b80156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b5050505050905084565b6103f36106c1565b3073ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61043d6106c1565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61049f6108dd565b6104a7610738565b600282815481106104bb576104ba610fbd565b5b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461050290610f8c565b80601f016020809104026020016040519081016040528092919081815260200182805461052e90610f8c565b801561057b5780601f106105505761010080835404028352916020019161057b565b820191906000526020600020905b81548152906001019060200180831161055e57829003601f168201915b5050505050815250509050919050565b6105936106c1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f99061105e565b60405180910390fd5b61060b81610811565b50565b610616610738565b60028054905081600001818152505060028190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003019081610684919061122a565b5050507fa3be13d0d66ad2a9cc793fa2c8efcab3dc5776a3032ee2cb813702b574c3aaee816040516106b69190610d1f565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff166106e061040c565b73ffffffffffffffffffffffffffffffffffffffff1614610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d90611348565b60405180910390fd5b565b600160006107446108d5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806107d0575061079a61040c565b73ffffffffffffffffffffffffffffffffffffffff166107b86108d5565b73ffffffffffffffffffffffffffffffffffffffff16145b61080f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610806906113b4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280600081526020016000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061094482610919565b9050919050565b61095481610939565b811461095f57600080fd5b50565b6000813590506109718161094b565b92915050565b60006020828403121561098d5761098c61090f565b5b600061099b84828501610962565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6109e3816109d0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a23578082015181840152602081019050610a08565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a4b826109e9565b610a5581856109f4565b9350610a65818560208601610a05565b610a6e81610a2f565b840191505092915050565b6000608083016000830151610a9160008601826109da565b506020830151610aa460208601826109da565b506040830151610ab760408601826109da565b5060608301518482036060860152610acf8282610a40565b9150508091505092915050565b6000610ae88383610a79565b905092915050565b6000602082019050919050565b6000610b08826109a4565b610b1281856109af565b935083602082028501610b24856109c0565b8060005b85811015610b605784840389528151610b418582610adc565b9450610b4c83610af0565b925060208a01995050600181019050610b28565b50829750879550505050505092915050565b60006020820190508181036000830152610b8c8184610afd565b905092915050565b610b9d816109d0565b8114610ba857600080fd5b50565b600081359050610bba81610b94565b92915050565b600060208284031215610bd657610bd561090f565b5b6000610be484828501610bab565b91505092915050565b610bf6816109d0565b82525050565b600082825260208201905092915050565b6000610c18826109e9565b610c228185610bfc565b9350610c32818560208601610a05565b610c3b81610a2f565b840191505092915050565b6000608082019050610c5b6000830187610bed565b610c686020830186610bed565b610c756040830185610bed565b8181036060830152610c878184610c0d565b905095945050505050565b610c9b81610939565b82525050565b6000602082019050610cb66000830184610c92565b92915050565b6000608083016000830151610cd460008601826109da565b506020830151610ce760208601826109da565b506040830151610cfa60408601826109da565b5060608301518482036060860152610d128282610a40565b9150508091505092915050565b60006020820190508181036000830152610d398184610cbc565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d7e82610a2f565b810181811067ffffffffffffffff82111715610d9d57610d9c610d46565b5b80604052505050565b6000610db0610905565b9050610dbc8282610d75565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610deb57610dea610d46565b5b610df482610a2f565b9050602081019050919050565b82818337600083830152505050565b6000610e23610e1e84610dd0565b610da6565b905082815260208101848484011115610e3f57610e3e610dcb565b5b610e4a848285610e01565b509392505050565b600082601f830112610e6757610e66610dc6565b5b8135610e77848260208601610e10565b91505092915050565b600060808284031215610e9657610e95610d41565b5b610ea06080610da6565b90506000610eb084828501610bab565b6000830152506020610ec484828501610bab565b6020830152506040610ed884828501610bab565b604083015250606082013567ffffffffffffffff811115610efc57610efb610dc1565b5b610f0884828501610e52565b60608301525092915050565b600060208284031215610f2a57610f2961090f565b5b600082013567ffffffffffffffff811115610f4857610f47610914565b5b610f5484828501610e80565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fa457607f821691505b602082108103610fb757610fb6610f5d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611048602683610bfc565b915061105382610fec565b604082019050919050565b600060208201905081810360008301526110778161103b565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110a3565b6110ea86836110a3565b95508019841693508086168417925050509392505050565b6000819050919050565b600061112761112261111d846109d0565b611102565b6109d0565b9050919050565b6000819050919050565b6111418361110c565b61115561114d8261112e565b8484546110b0565b825550505050565b600090565b61116a61115d565b611175818484611138565b505050565b5b818110156111995761118e600082611162565b60018101905061117b565b5050565b601f8211156111de576111af8161107e565b6111b884611093565b810160208510156111c7578190505b6111db6111d385611093565b83018261117a565b50505b505050565b600082821c905092915050565b6000611201600019846008026111e3565b1980831691505092915050565b600061121a83836111f0565b9150826002028217905092915050565b611233826109e9565b67ffffffffffffffff81111561124c5761124b610d46565b5b6112568254610f8c565b61126182828561119d565b600060209050601f8311600181146112945760008415611282578287015190505b61128c858261120e565b8655506112f4565b601f1984166112a28661107e565b60005b828110156112ca578489015182556001820191506020850194506020810190506112a5565b868310156112e757848901516112e3601f8916826111f0565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611332602083610bfc565b915061133d826112fc565b602082019050919050565b6000602082019050818103600083015261136181611325565b9050919050565b7f5065726d697373696f6e3a206f6e6c7920617070726f76656400000000000000600082015250565b600061139e601983610bfc565b91506113a982611368565b602082019050919050565b600060208201905081810360008301526113cd81611391565b905091905056fea264697066735822122056a9a6e0f0de5d98ebc238ac2f2521c87a71e2ac87db0adbc136d4fa7e85fe6964736f6c63430008110033";

type ListEmployeeCVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListEmployeeCVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListEmployeeCV__factory extends ContractFactory {
  constructor(...args: ListEmployeeCVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ListEmployeeCV> {
    return super.deploy(overrides || {}) as Promise<ListEmployeeCV>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListEmployeeCV {
    return super.attach(address) as ListEmployeeCV;
  }
  override connect(signer: Signer): ListEmployeeCV__factory {
    return super.connect(signer) as ListEmployeeCV__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListEmployeeCVInterface {
    return new utils.Interface(_abi) as ListEmployeeCVInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListEmployeeCV {
    return new Contract(address, _abi, signerOrProvider) as ListEmployeeCV;
  }
}
