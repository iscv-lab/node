import { ContractFactory, utils, Contract } from 'ethers';

/* Autogenerated file. Do not edit manually. */
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "listBusinessAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "listBusinessApplyAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "employeeId",
                type: "uint256",
            },
        ],
        name: "_checkApplyIdBelongsToEmployeeId",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "employeeId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "postId",
                type: "string",
            },
        ],
        name: "_checkExistApply",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "_checkExistBusinessAccount",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "postId",
                type: "string",
            },
        ],
        name: "_checkIdBelongsToPostId",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "phone",
                type: "string",
            },
            {
                internalType: "string",
                name: "professional",
                type: "string",
            },
            {
                internalType: "string",
                name: "email",
                type: "string",
            },
            {
                internalType: "string",
                name: "github",
                type: "string",
            },
            {
                internalType: "string",
                name: "linkedin",
                type: "string",
            },
            {
                internalType: "string",
                name: "sourceImage",
                type: "string",
            },
        ],
        name: "addBusiness",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "destroy",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getAllApplies",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "employeeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "businessId",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "postId",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "time",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "status",
                        type: "uint256",
                    },
                ],
                internalType: "struct BusinessApply[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAllProfile",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "user",
                        type: "address",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "phone",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "professional",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "email",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "github",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "linkedin",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "sourceImage",
                        type: "string",
                    },
                ],
                internalType: "struct Profile[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "getProfile",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "user",
                        type: "address",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "phone",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "professional",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "email",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "github",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "linkedin",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "sourceImage",
                        type: "string",
                    },
                ],
                internalType: "struct Profile",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class BusinessController__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(listBusinessAddress, listBusinessApplyAddress, overrides) {
        return super.deploy(listBusinessAddress, listBusinessApplyAddress, overrides || {});
    }
    getDeployTransaction(listBusinessAddress, listBusinessApplyAddress, overrides) {
        return super.getDeployTransaction(listBusinessAddress, listBusinessApplyAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}

export { BusinessController__factory };
