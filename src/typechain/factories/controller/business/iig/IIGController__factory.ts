/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IIGController,
  IIGControllerInterface,
} from "../../../../controller/business/iig/IIGController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "listBusinessAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listEmployeeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listIIGRequestAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listIIGLRResultAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "listIIGSWResultAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_checkExistBusinessAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_checkExistEmployeeAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
    ],
    name: "_checkExistIIGRequestLR",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
    ],
    name: "_checkExistIIGRequestSW",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
    ],
    name: "addLRRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "testDate",
        type: "uint256",
      },
      {
        internalType: "enum IIGShiftTest",
        name: "shiftTest",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expireDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listeningScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "readingScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "addLRResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
    ],
    name: "addSWRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "businessId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "testDate",
        type: "uint256",
      },
      {
        internalType: "enum IIGShiftTest",
        name: "shiftTest",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expireDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "speakingScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "writingScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "addSWResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllIIGLRResult",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "testDate",
            type: "uint256",
          },
          {
            internalType: "enum IIGShiftTest",
            name: "shiftTest",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expireDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listeningScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "readingScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
        ],
        internalType: "struct IIGLRResult[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllIIGRequest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "requestDate",
            type: "uint256",
          },
          {
            internalType: "enum IIGRequestType",
            name: "requestType",
            type: "uint8",
          },
          {
            internalType: "enum IIGStatusRequest",
            name: "statusRequest",
            type: "uint8",
          },
        ],
        internalType: "struct IIGRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllIIGSWResult",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "businessId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "testDate",
            type: "uint256",
          },
          {
            internalType: "enum IIGShiftTest",
            name: "shiftTest",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expireDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speakingScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "writingScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
        ],
        internalType: "struct IIGSWResult[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a9f38038062001a9f8339810160408190526200003491620000be565b60008054336001600160a01b0319918216179091556001805482166001600160a01b0397881617905560028054821695871695909517909455600380548516938616939093179092556004805484169185169190911790556005805490921692169190911790556200012e565b80516001600160a01b0381168114620000b957600080fd5b919050565b600080600080600060a08688031215620000d757600080fd5b620000e286620000a1565b9450620000f260208701620000a1565b93506200010260408701620000a1565b92506200011260608701620000a1565b91506200012260808701620000a1565b90509295509295909350565b611961806200013e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b97f0c761161008c578063d610b45a11610066578063d610b45a146101c7578063ec40a59b146101cf578063f2fde38b146101d7578063fc938874146101ea57600080fd5b8063b97f0c761461018e578063c6648542146101a1578063cf26f865146101b457600080fd5b806378a81bd5116100c857806378a81bd51461013f57806383197ef0146101545780638da5cb5b1461015e578063a7cdca4b1461017957600080fd5b80631598193a146100ef5780631e25424314610117578063320cf3f21461012a575b600080fd5b6101026100fd366004610f58565b6101fd565b60405190151581526020015b60405180910390f35b610102610125366004610f58565b61032c565b61013261044e565b60405161010e9190610ff9565b6101476104cc565b60405161010e91906110ad565b61015c610545565b005b6000546040516001600160a01b03909116815260200161010e565b610181610550565b60405161010e91906110f0565b61015c61019c366004611140565b610564565b61015c6101af366004610f58565b6107a0565b61015c6101c2366004611140565b610964565b610102610b2d565b610102610bba565b61015c6101e53660046111ba565b610bef565b61015c6101f8366004610f58565b610c68565b6000806102126003546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261027791908101906112b3565b905060005b815181101561031f576000828281518110610299576102996113b0565b602002602001015190508581604001511480156102b95750848160200151145b80156102da57506002816080015160028111156102d8576102d8610f7a565b145b80156102fb575060018160a0015160038111156102f9576102f9610f7a565b145b1561030c5760019350505050610326565b5080610317816113c6565b91505061027c565b5060009150505b92915050565b6000806103416003546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a691908101906112b3565b905060005b815181101561031f5760008282815181106103c8576103c86113b0565b602002602001015190508581604001511480156103e85750848160200151145b8015610409575060018160800151600281111561040757610407610f7a565b145b801561042a575060018160a00151600381111561042857610428610f7a565b145b1561043b5760019350505050610326565b5080610446816113c6565b9150506103ab565b60606104626003546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561049f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c791908101906112b3565b905090565b60606104e06005546001600160a01b031690565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c791908101906114c0565b61054d610dad565b30ff5b60606104e06004546001600160a01b031690565b8761056d610b2d565b6105925760405162461bcd60e51b815260040161058990611511565b60405180910390fd5b61059b81610e18565b6105b75760405162461bcd60e51b815260040161058990611556565b8860026105cc6001546001600160a01b031690565b6001600160a01b031663e0886f90836040518263ffffffff1660e01b81526004016105f991815260200190565b600060405180830381865afa158015610616573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063e9190810190611787565b511461065c5760405162461bcd60e51b8152600401610589906117bc565b6000604051806101200160405280600081526020018c81526020018b81526020018a815260200189600481111561069557610695610f7a565b81526020018881526020018781526020018681526020014281525090506106c46003546001600160a01b031690565b6001600160a01b0316632be2eff18560026040518363ffffffff1660e01b81526004016106f29291906117fd565b600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050506107366005546001600160a01b031690565b6001600160a01b0316638f89e6f2826040518263ffffffff1660e01b81526004016107619190611811565b600060405180830381600087803b15801561077b57600080fd5b505af115801561078f573d6000803e3d6000fd5b505050505050505050505050505050565b816107a9610bba565b6107c55760405162461bcd60e51b815260040161058990611820565b6107ce81610ea6565b6107ea5760405162461bcd60e51b815260040161058990611865565b8160026107ff6001546001600160a01b031690565b6001600160a01b031663e0886f90836040518263ffffffff1660e01b815260040161082c91815260200190565b600060405180830381865afa158015610849573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108719190810190611787565b511461088f5760405162461bcd60e51b8152600401610589906117bc565b838361089b828261032c565b156108b85760405162461bcd60e51b8152600401610589906118b4565b6040805160c0810182526000808252602082018890529181018890524260608201526080810160015b81526020016001905290506108fe6003546001600160a01b031690565b6001600160a01b0316637ef3e572826040518263ffffffff1660e01b81526004016109299190611904565b600060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b5050505050505050505050565b8761096d610b2d565b6109895760405162461bcd60e51b815260040161058990611511565b61099281610e18565b6109ae5760405162461bcd60e51b815260040161058990611556565b8860026109c36001546001600160a01b031690565b6001600160a01b031663e0886f90836040518263ffffffff1660e01b81526004016109f091815260200190565b600060405180830381865afa158015610a0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a359190810190611787565b5114610a535760405162461bcd60e51b8152600401610589906117bc565b6000604051806101200160405280600081526020018c81526020018b81526020018a8152602001896004811115610a8c57610a8c610f7a565b8152602001888152602001878152602001868152602001428152509050610abb6003546001600160a01b031690565b6001600160a01b0316632be2eff18560026040518363ffffffff1660e01b8152600401610ae99291906117fd565b600060405180830381600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b505050506107366004546001600160a01b031690565b600154604051630689388760e41b815233600482015260009182916001600160a01b03909116906368938870906024015b602060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611912565b90506000198103610bb257600091505090565b600191505090565b600254604051630689388760e41b815233600482015260009182916001600160a01b0390911690636893887090602401610b5e565b610bf7610dad565b6001600160a01b038116610c5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610589565b610c6581610edc565b50565b81610c71610bba565b610c8d5760405162461bcd60e51b815260040161058990611820565b610c9681610ea6565b610cb25760405162461bcd60e51b815260040161058990611865565b816002610cc76001546001600160a01b031690565b6001600160a01b031663e0886f90836040518263ffffffff1660e01b8152600401610cf491815260200190565b600060405180830381865afa158015610d11573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d399190810190611787565b5114610d575760405162461bcd60e51b8152600401610589906117bc565b8383610d6382826101fd565b15610d805760405162461bcd60e51b8152600401610589906118b4565b6040805160c0810182526000808252602082018890529181018890524260608201526080810160026108e1565b33610dc06000546001600160a01b031690565b6001600160a01b031614610e165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610589565b565b600154604051630e0886f960e41b81526004810183905260009182916001600160a01b039091169063e0886f90906024015b600060405180830381865afa158015610e67573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8f9190810190611787565b9050610e9f816040015133610f2c565b9392505050565b600254604051630e0886f960e41b81526004810183905260009182916001600160a01b039091169063e0886f9090602401610e4a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816001600160a01b0316836001600160a01b031603610f4f57506001610326565b50600092915050565b60008060408385031215610f6b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b60048110610fa057610fa0610f7a565b9052565b80518252602081015160208301526040810151604083015260608101516060830152608081015160038110610fdb57610fdb610f7a565b8060808401525060a0810151610ff460a0840182610f90565b505050565b6020808252825182820181905260009190848201906040850190845b8181101561103b57611028838551610fa4565b9284019260c09290920191600101611015565b50909695505050505050565b8051825260208101516020830152604081015160408301526060810151606083015260808101516005811061107e5761107e610f7a565b608083015260a0818101519083015260c0808201519083015260e0808201519083015261010090810151910152565b6020808252825182820181905260009190848201906040850190845b8181101561103b576110dc838551611047565b9284019261012092909201916001016110c9565b6020808252825182820181905260009190848201906040850190845b8181101561103b5761111f838551611047565b92840192610120929092019160010161110c565b60058110610c6557600080fd5b600080600080600080600080610100898b03121561115d57600080fd5b883597506020890135965060408901359550606089013561117d81611133565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b6001600160a01b0381168114610c6557600080fd5b6000602082840312156111cc57600080fd5b8135610e9f816111a5565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611210576112106111d7565b60405290565b604051610120810167ffffffffffffffff81118282101715611210576112106111d7565b604051610140810167ffffffffffffffff81118282101715611210576112106111d7565b604051601f8201601f1916810167ffffffffffffffff81118282101715611287576112876111d7565b604052919050565b600067ffffffffffffffff8211156112a9576112a96111d7565b5060051b60200190565b600060208083850312156112c657600080fd5b825167ffffffffffffffff8111156112dd57600080fd5b8301601f810185136112ee57600080fd5b80516113016112fc8261128f565b61125e565b81815260c0918202830184019184820191908884111561132057600080fd5b938501935b838510156113a45780858a03121561133d5760008081fd5b6113456111ed565b8551815286860151878201526040808701519082015260608087015190820152608080870151600381106113795760008081fd5b9082015260a086810151600481106113915760008081fd5b9082015283529384019391850191611325565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016113e657634e487b7160e01b600052601160045260246000fd5b5060010190565b80516113f881611133565b919050565b600061140b6112fc8461128f565b838152905060208082019061012080860285018781111561142b57600080fd5b855b818110156114b45782818a0312156114455760008081fd5b61144d611216565b8151815284820151858201526040808301519082015260608083015190820152608061147a8184016113ed565b9082015260a0828101519082015260c0808301519082015260e080830151908201526101008083015190820152855293830193820161142d565b50505050509392505050565b6000602082840312156114d257600080fd5b815167ffffffffffffffff8111156114e957600080fd5b8201601f810184136114fa57600080fd5b611509848251602084016113fd565b949350505050565b60208082526025908201527f4c697374427573696e657373437572736f723a206e6f7420657869737420616360408201526418dbdd5b9d60da1b606082015260800190565b6020808252602f908201527f4c697374427573696e657373437572736f723a206964206973206e6f7420626560408201526e6c6f6e6720746f206164647265737360881b606082015260800190565b80516113f8816111a5565b600082601f8301126115c157600080fd5b815167ffffffffffffffff8111156115db576115db6111d7565b60206115ef601f8301601f1916820161125e565b828152858284870101111561160357600080fd5b60005b83811015611621578581018301518282018401528201611606565b506000928101909101919091529392505050565b6000610140828403121561164857600080fd5b61165061123a565b9050815181526020820151602082015261166c604083016115a5565b6040820152606082015167ffffffffffffffff8082111561168c57600080fd5b611698858386016115b0565b606084015260808401519150808211156116b157600080fd5b6116bd858386016115b0565b608084015260a08401519150808211156116d657600080fd5b6116e2858386016115b0565b60a084015260c08401519150808211156116fb57600080fd5b611707858386016115b0565b60c084015260e084015191508082111561172057600080fd5b61172c858386016115b0565b60e08401526101009150818401518181111561174757600080fd5b611753868287016115b0565b83850152506101209150818401518181111561176e57600080fd5b61177a868287016115b0565b8385015250505092915050565b60006020828403121561179957600080fd5b815167ffffffffffffffff8111156117b057600080fd5b61150984828501611635565b60208082526021908201527f494947436f6e74726f6c6c65723a206973206e6f7420494947204163636f756e6040820152601d60fa1b606082015260800190565b82815260408101610e9f6020830184610f90565b61012081016103268284611047565b60208082526025908201527f4c697374456d706c6f796565437572736f723a206e6f7420657869737420616360408201526418dbdd5b9d60da1b606082015260800190565b6020808252602f908201527f4c697374456d706c6f796565437572736f723a206964206973206e6f7420626560408201526e6c6f6e6720746f206164647265737360881b606082015260800190565b60208082526030908201527f4949474c69737449494752657175657374437572736f723a204f6e6c7920726560408201526f7175657374204c52206f6e6574696d6560801b606082015260800190565b60c081016103268284610fa4565b60006020828403121561192457600080fd5b505191905056fea2646970667358221220c0dbcbdc99ee4e1006dcb8961bec6a7d939953efdb41589a1258acf8f440c31664736f6c63430008110033";

type IIGControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IIGControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IIGController__factory extends ContractFactory {
  constructor(...args: IIGControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    listBusinessAddress: PromiseOrValue<string>,
    listEmployeeAddress: PromiseOrValue<string>,
    listIIGRequestAddress: PromiseOrValue<string>,
    listIIGLRResultAddress: PromiseOrValue<string>,
    listIIGSWResultAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IIGController> {
    return super.deploy(
      listBusinessAddress,
      listEmployeeAddress,
      listIIGRequestAddress,
      listIIGLRResultAddress,
      listIIGSWResultAddress,
      overrides || {}
    ) as Promise<IIGController>;
  }
  override getDeployTransaction(
    listBusinessAddress: PromiseOrValue<string>,
    listEmployeeAddress: PromiseOrValue<string>,
    listIIGRequestAddress: PromiseOrValue<string>,
    listIIGLRResultAddress: PromiseOrValue<string>,
    listIIGSWResultAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      listBusinessAddress,
      listEmployeeAddress,
      listIIGRequestAddress,
      listIIGLRResultAddress,
      listIIGSWResultAddress,
      overrides || {}
    );
  }
  override attach(address: string): IIGController {
    return super.attach(address) as IIGController;
  }
  override connect(signer: Signer): IIGController__factory {
    return super.connect(signer) as IIGController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IIGControllerInterface {
    return new utils.Interface(_abi) as IIGControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIGController {
    return new Contract(address, _abi, signerOrProvider) as IIGController;
  }
}
